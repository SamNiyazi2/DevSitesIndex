using Microsoft.EntityFrameworkCore.Migrations;

// 06/18/2021 09:24 pm - SSN - Adding missed changes

namespace DevSitesIndex.Migrations
{
    public partial class Missedupdates : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {




            migrationBuilder.Sql(@"

/*
Deployment script for Testing_DB_Download_20210611_v06

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/




GO
PRINT N'Dropping [DemoSites].[DevSiteCodeReference].[IX_DevSiteCodeReference_CodeReferenceId]...';


GO
DROP INDEX [IX_DevSiteCodeReference_CodeReferenceId]
    ON [DemoSites].[DevSiteCodeReference];


GO
PRINT N'Starting rebuilding table [DemoSites].[TimeLog_Arch]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [DemoSites].[tmp_ms_xx_TimeLog_Arch] (
    [TimeLogId]     INT            NOT NULL,
    [DateAdded]     DATETIME2 (0)  NOT NULL,
    [DateModified]  DATETIME2 (0)  NULL,
    [DisciplineID]  INT            NOT NULL,
    [JobId]         INT            NOT NULL,
    [StartTime]     DATETIME2 (0)  NOT NULL,
    [TotalSeconds]  INT            NULL,
    [WorkDetail]    NVARCHAR (MAX) NULL,
    [RowVersion]    VARBINARY (50) NULL,
    [LineItemId]    INT            NULL,
    [Date_Archived] DATETIME       NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [DemoSites].[TimeLog_Arch])
    BEGIN
        INSERT INTO [DemoSites].[tmp_ms_xx_TimeLog_Arch] ([TimeLogId], [DateAdded], [DateModified], [DisciplineID], [JobId], [StartTime], [TotalSeconds], [WorkDetail], [RowVersion], [Date_Archived])
        SELECT [TimeLogId],
               [DateAdded],
               [DateModified],
               [DisciplineID],
               [JobId],
               [StartTime],
               [TotalSeconds],
               [WorkDetail],
               [RowVersion],
               [Date_Archived]
        FROM   [DemoSites].[TimeLog_Arch];
    END

DROP TABLE [DemoSites].[TimeLog_Arch];

EXECUTE sp_rename N'[DemoSites].[tmp_ms_xx_TimeLog_Arch]', N'TimeLog_Arch';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [DemoSites].[DevSiteCodeReference].[IX_DevSiteCodeReference_CodeReferenceId]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_DevSiteCodeReference_CodeReferenceId]
    ON [DemoSites].[DevSiteCodeReference]([CodeReferenceId] ASC);


GO
PRINT N'Creating [DemoSites].[DevSiteTechnologies].[IX_DevSiteTechnologies]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_DevSiteTechnologies]
    ON [DemoSites].[DevSiteTechnologies]([DevSiteID] ASC, [TechnologyID] ASC);


GO
PRINT N'Altering [DemoSites].[trg_Timelog_OneOpenRecordOnly]...';


GO
 


 
-- 06/01/2019 04:01 pm - SSN - Verify that we don't have more than one open record (null totalSeconds) at a time.
-- 09/28/2019 03:06 pm - SSN - [20190928-1453] Make sure we don't post more than four hours. (c#)
-- 10/29/2019 07:58 am - SSN - [20191029-0759] catch double-click (C#)
-- 12/28/2019 03:47 pm - SSN - Changed from 1 to 0 - We were already excluding #inserted record

-- 12/10/2020 01:36 pm - SSN - Trigger name is stored in a variable for Trigger_NestLevel call

-- 06/01/2021 06:39 pm - SSN - [20210601-1839] - [001] - Correct logic error with attempting to close out newer record when editing a closed one
-- 06/18/2021 08:40 pm - SSN - Error on editing closed record.  Attempting to close current record.

ALTER TRIGGER [DemoSites].[trg_Timelog_OneOpenRecordOnly] 
   ON  [DemoSites].[TimeLog]
   AFTER  insert,update
AS 
BEGIN

	SET NOCOUNT ON;
  

	declare @triggerName sysname

	set @triggerName = 'DemoSites.trg_Timelog_OneOpenRecordOnly'

  -- 12/28/2019 04:56 pm - SSN - [20191228-1656] - Use variable tables

   declare @inertedTable table ( TimelogID int, StartTime DateTime2, TotalSeconds int ) 
	
   declare @allOtherOpenRecordsTable table ( TimelogID int, StartTime DateTime2 ) 
    


   insert into @inertedTable select TimeLogId, StartTime, TotalSeconds from inserted
     
  
	insert into @allOtherOpenRecordsTable
	select  [TimeLogId] 
			  ,[StartTime]
		 
		  FROM DemoSites.TimeLog
		  where TotalSeconds is null
		  and TimeLogId not in ( select TimeLogId from @inertedTable)



-- 09/28/2019 03:06 pm - SSN - [20190928-1453] Make sure we don't post more than four hours.
declare @TotalSeconds_sinceLastTimelog int

-- 06/01/2021 06:39 pm - SSN - [20210601-1839] - [001] - Correct logic error with attempting to close out newer record when editing a closed one
declare @currentRecordIsOpen bit

select  @TotalSeconds_sinceLastTimelog = datediff ( s , DemoSites.TimeLog.StartTime, cc.StartTime ) , 
		@currentRecordIsOpen = case when cc.TimelogID = 1 and cc.TotalSeconds is null then 1 else 0 end 
		
				from @allOtherOpenRecordsTable aa
					cross join  @inertedTable cc
				cross join Demosites.TimeLog 				
				where DemoSites.timelog.TimeLogId = aa.timelogid and DemoSites.TimeLog.TotalSeconds is null 
-- 10/29/2019 07:58 am - SSN - [20191029-0759] catch double-click 
					and cc.StartTime >= DemoSites.TimeLog.StartTime
					 

	declare @recordsInserted int
	declare @totalSeconds int

	-- 12/28/2019 04:19 pm - SSN - [20191228-1619] - @totalSeconds  Get total seconds from inserted record.  We are checking if we have more than one record.
	declare @openRecordCount int

	select @recordsInserted = count(*) ,  @totalSeconds = max(isnull(TotalSeconds,0))   from @inertedTable

	select @openRecordCount = count(*) from @allOtherOpenRecordsTable


	if ( @recordsInserted = 0 or @openRecordCount = 0 ) return;

	 

	declare @message varchar(1000);

	declare @trigger_nestLevel int

	declare @triggerObjectId int

	set @triggerObjectId = object_id ( @triggerName )

	select @trigger_nestLevel = trigger_nestLevel( @triggerObjectId  )
	 

	IF (  @trigger_nestLevel > 1 )  
		begin
			set @message = 'ssn-sql-20190601-1659 - Calling trigger more than once. [' + convert ( varchar , @trigger_nestLevel  ) + '] recordsInserted [' + convert ( varchar , @recordsInserted ) +']  openRecordCount [' + convert ( varchar , @openRecordCount ) + ']'
			;
			throw 50000, @message , 1
		end

	 

	if @recordsInserted > 1
		begin
		;
			throw 50000 , 'ssn-sql-20190601-1607 - Cannot insert more than one record at a time into TimeLog', 2
		end
	
	-- 12/28/2019 03:47 pm - SSN - Changed from 1 to 0 - We were already excluding #inserted record
	-- 12/28/2019 04:19 pm - SSN - [20191228-1619] - @totalSeconds  Get total seconds from inserted record.  We are checking if we have more than one record.
    -- If we are closing an existing record @openRecordCount will be 0
	-- 12/10/2020 01:44 am - SSN - Bug?
	-- if @openRecordCount > iif  (  @totalSeconds is null , 1  , 1  )   -- #inserted record is excluded with except
	if @openRecordCount > 1  -- #inserted record is excluded with except
		begin
			set @message = 'ssn-sql-20190601-1619 - Have more than one open record ' + 
			' [' + convert ( varchar , @openRecordCount)  + '] ' + 
			' @totalSeconds [' + convert ( varchar , @totalSeconds) + ']' +
			' @recordsInserted  [' + CONVERT ( varchar , @recordsInserted ) + '] ' + 
			' (null TotalSeconds in TimeLog). Must fix manually.'
		;
			throw 50000 , @message , 1
		end


	if @openRecordCount = 0 return

		
	-- 09/28/2019 02:53 pm - SSN - [20190928-1453] Make sure we don't post more than four hours.
	if @openRecordCount = 1  and @TotalSeconds_sinceLastTimelog  > 4 * 60 * 60
		begin
			set @message = 'ssn-sql-20190928-1454 - Trying to automatically post period greater than four hours [' + convert ( varchar , @TotalSeconds_sinceLastTimelog) + ']. Must fix manually.'
		;
			throw 50000 , @message , 1
		end

-- 06/18/2021 08:40 pm - SSN - Error on editing closed record.  Attempting to close current record.
	if @openRecordCount = 1 and @currentRecordIsOpen = 0
		begin
			update DemoSites.TimeLog  set TotalSeconds = datediff ( s , DemoSites.TimeLog.StartTime, cc.StartTime ) 
				from @allOtherOpenRecordsTable aa
					cross join  @inertedTable cc
						
				where DemoSites.timelog.TimeLogId = aa.timelogid and DemoSites.TimeLog.TotalSeconds is null 
					and cc.StartTime > DemoSites.TimeLog.StartTime

-- 12/10/2020 01:57 pm - SSN - If failed to update, throw an error.
			if ( @@ROWCOUNT = 0 ) 

				begin
					set @message = 'ssn-sql-20201210-1358 - Failed to close open record. Must fix manually.'
				;
					throw 50000 , @message , 1
				end

		end
		 

end
GO
PRINT N'Creating [DemoSites].[fsql___stripNonAlphanumeric]...';


GO



create FUNCTION [DemoSites].[fsql___stripNonAlphanumeric] 
(
	@fullText varchar(max)
)
RETURNs varchar(max) 
AS
BEGIN

	declare @returnSring varchar(max)

	set @returnSring = replace ( @fullText , char(10),'')
	set @returnSring = replace ( @returnSring , ' ','')

	return @returnSring 
END
GO
PRINT N'Altering [DemoSites].[DevSites_FullTextSearch]...';


GO



-- 08/12/2019 04:06 am - SSN - [20190812-0345] - [002] - Apply fulltext search  (C#-v02)
-- 09/10/2019 05:33 pm - SSN - RowVersion
-- 06/14/2021 05:45 am - SSN - Return key on.  We have to 'include' technologies in the query.  We are doing it in code.

ALTER proc [DemoSites].[DevSites_FullTextSearch]
(
    @searchterm nvarchar(1000)
)
AS

	SELECT TOP (50) [Id]
      ,[SiteTitle]
      ,[SiteUrl]
      ,[SolutionName]
      ,[Solution_Details]
      ,[DateAdded]
      ,[SoftwareCodeID]
      ,[DateUpdated]
      ,[CanBeLaunched]
      ,[ForDemo_v02],
	  LastActivityDate,
	  RowVersion
  FROM [DemoSites].[DevSites] with (nolock)

	    WHERE 
			Contains( (SolutionName), @searchterm)
			or
			Contains( (SiteTitle), @searchterm)
			or
			Contains( (Solution_Details), @searchterm)
	
	 
	order by DateUpdated desc, DateAdded desc
GO
PRINT N'Creating [DemoSites].[Timelog_Extract_LineItem]...';


GO
 
 

-- 06/11/2021 03:52 am - SSN - Creating a process to extract the default ""Line Item"" for the new addition
-- Testing_DB_Download_20210611_v02]

CREATE procedure[DemoSites].[Timelog_Extract_LineItem]

as


declare @sep varchar(1)

set @sep = char(10)

declare @topCount int
set @topcount  = 300000000 

;


with x as (

    select top (@topCount)

    ROW_NUMBER() over(partition by timelogid order by weight) RowNo,   * , 
	
			CHARINDEX(@sep , aaa.workdetail  ) index1 ,
			CHARINDEX(@sep , aaa.workdetail, CHARINDEX (@sep, aaa.workdetail) + 1 ) index2

     from DemoSites.TimeLog aaa


                outer apply(
                                select
										case when
                                            value like 'http:%' or value like 'https:%' then 2

                                            when trim (value) = '' then 2
											else 1

                                        end weight,


                                        * from   (
                                                    select ltrim (rtrim (replace (value, char(13),''))) value from(
                                                            select value from string_split (aaa.workdetail, @sep)
                                                                where trim (value) <> ''

																) qq

												) q1 
							) q2


	--	where CHARINDEX(@sep, aaa.workdetail, CHARINDEX (@sep, aaa.workdetail) + 1 ) > 0
		 
)
select
    TimelogId, RowNo, weight, WorkDetail, value, index1, index2

    from x

--select count(*) from x

--	where rowno = 1

--select count(*) from demosites.timelog
GO
PRINT N'Creating [DemoSites].[Timelog_MoveLineItems]...';


        GO

-- 06/18/2021 05:48 am - SSN - Moving data

create procedure[DemoSites].[Timelog_MoveLineItems]

        @step int

as


if @step is null 
	begin

        print ' '

        print ' '
		print 'Must provide step number'
		print ' '
		print '1 - Inserting records into  [DemoSites].[Job_Lineitems]'
		print '2 - Update TimeLog LineItemID'
		print ' '
		print ' '
		;
		throw 50001, 'Must provide step number', 16;
	end


declare @table table(TimelogId int, RowNo int, weight int , WorkDetail varchar(max), value varchar(max), index1 int , index2 int )

insert into @table exec[DemoSites].[Timelog_Extract_LineItem]

        declare @table2 table(timelogid int not null , jobid int not null , LineItem varchar(200) not null )
declare @table3 table(jobid int not null , LineItem varchar(200)not null , DateAdded datetime not null )
;
with x as (

    select
        aa.TimeLogId,   
		jobid  ,
		case when replace(ltrim(rtrim (coalesce (value,''))),char (13),'') = '' then 'Not defined' else value end  LineItem

from @table aa

        left join DemoSites.TimeLog bb

            on aa.TimelogId = bb.TimeLogId

        where rowno = 1

)
insert into @table2

    select* from x

;

with y as 
(
    select aa.jobid, LineItem , min(DateAdded) DateAdded
        from @table2 aa

            left join demosites.timelog bb

                on aa.timelogid = bb.timelogid

        group by aa.jobid , LineItem
)
insert into @table3

    select* from y		


if @step = 1 
	begin
        insert into[DemoSites].[Job_Lineitems]
        (JobId, LineItem, dateadded)

            select* from @table3
   end


    select count(*) from @table2  aa

if @step = 2
	begin
        update demosites.TimeLog
            set lineitemid = bb.lineitemid
            from(
                    select timelogid, lineitemid from @table2 aa

                        left join [DemoSites].[Job_Lineitems] bb
                            on aa.jobid = bb.JobId

                                and aa.LineItem       = bb.LineItem
            ) bb

            where demosites.TimeLog.TimeLogId = bb.timelogid



    end


    select aa.jobid, aa.lineitem , count(*) from @table2 aa

        left join  @table3 bb

            on aa.jobid = bb.jobid

                and aa.lineitem = bb.lineitem

        group by aa.jobid, aa.lineitem
        having count(*) > 1 
		


--CREATE TABLE [DemoSites].[Job_Lineitems](
--	[LineItemId] [int] IDENTITY(1,1) NOT NULL,
--	[JobId] [int] NOT NULL,
--	[LineItem] [nvarchar] (200) NOT NULL,
 --	[DateAdded] [datetime2] (0) NOT NULL,
  --	[DateModified] [datetime2] (0) NULL,
--	[RowVersion] [timestamp] NULL,
GO
PRINT N'Creating [DemoSites].[Timelog_Update_WorkDate_Less_LineItem]...';


GO
 

-- 06/11/2021 05:58 pm - SSN - Replacing WorkDetail with the remaining part after extracting line item
-- 06/18/2021 07:34 pm - SSN - Testing for deployment

create     procedure[DemoSites].[Timelog_Update_WorkDate_Less_LineItem]

as


declare @sep varchar(1)

set @sep = char(10)

declare @topCount int
set @topcount  = 300000000 

;


with x as (

    select top (@topCount)

                ROW_NUMBER() over(partition by timelogid order by weight) RowNo,   
				* , 
				len(workdetail) - len(replace (workdetail, char(10),'')) LineCounter


    from DemoSites.TimeLog aaa



                    outer apply(
                        select top (@topCount)
                                ROW_NUMBER() over (order by timelogid) RowNo2,
										* 
							from(
                                select ROW_NUMBER() over (order by timelogid) RowNo2_a,
										case when
                                            value like 'http:%' or value like 'https:%' then 2
											when trim(value) = '' then 2
											else 1
										end weight,
										* from(
                                        select value from string_split (aaa.workdetail, @sep)
                                            where trim (value) <> ''
					
												) q1 
										) q2

                                    order by Weight, RowNo2_a

								) q3

             where WorkDetail is not null

	order by TimeLogId, RowNo, RowNo2

) 
, y as (

    select
            timelogid, STRING_AGG (value, char(10)) WorkDetailNew
       from x
       where RowNo2 > 1
		group by timelogid
)

select
len(DemoSites.fsql___stripNonAlphanumeric (workdetail ) )
,
 len(DemoSites.fsql___stripNonAlphanumeric (value + coalesce(workdetailnew,'') ) )
,
	-- TimelogId, weight , WorkDetail, value
    x.TimeLogId, RowNo, RowNo2, Weight, WorkDetail, Value, LineCounter, WorkDetailNew

    from x
    left join y

        on x.TimeLogId = y.TimeLogId

--  order by TimeLogId, RowNo , RowNo2
where x.RowNo  = 1

--and
			
			--len (DemoSites.fsql___stripNonAlphanumeric(workdetail ) )
			--<> 			
			--len(DemoSites.fsql___stripNonAlphanumeric (value +  coalesce(workdetailnew,'') ) ) 
GO
PRINT N'Update complete.';


GO


");



        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {

        }
    }
}
