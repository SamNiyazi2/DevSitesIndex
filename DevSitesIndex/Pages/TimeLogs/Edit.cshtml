@page
@model DevSitesIndex.Pages.TimeLogs.EditModel

@{
    ViewData["Title"] = "Edit TimeLog";

    // 09/13/2019 06:01 am - SSN - [20190913-0548] - [003] - Crate generic dropdown list directive


    // 11/25/2019 11:38 pm - SSN - [20191125-2153] - [006] - Job create - Replace dropdown with dropdownListDirective

    //ViewBag.InitModule_Full = "data-ng-app=\"demoSites_Index_Timesheet\"";
    ViewBag.InitModule_Full = "data-ng-app=\"timesheetApp\"";

}





















<h2>@ViewData["Title"]</h2>

<hr />
<div class="row">

    @*// 09/13/2019 06:02 am - SSN - [20190913-0548] - [004] - Crate generic dropdown list directive  ng-controller *@



    <div class="col-md-4" ng-controller="utilityController" form-name="timesheetForm">

        <div ng-controller="ExampleControllerTemp">




            <form method="post" name="timesheetForm" ng-submit="submitForm_1($event,timesheetForm)" action="">

                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="TimeLog.TimeLogId" />
                <input type="hidden" asp-for="TimeLog.RowVersion" />
                <input type="hidden" asp-for="TimeLog.DateAdded" />

                @*// 09/21/2019 11:08 am - SSN - Added include job and project to display titles on form.*@


                <dt>
                    @Html.DisplayNameFor(model => model.TimeLog.job.project)
                </dt>
                <dd>
                    <a asp-page="/projects/Details" asp-route-id="@Model.TimeLog.job.ProjectID">
                        @Html.DisplayFor(model => model.TimeLog.job.project.ProjectTitle)
                    </a>
                </dd>

                <hr />





                @*
        // 09/13/2019 02:01 pm - SSN - [20190913-0548] - [010] - Crate generic dropdown list directive
        // Do we need this to post from directive???
        // Todo:
                *@




                <dt>
                    @Html.DisplayNameFor(model => model.TimeLog.DateAdded)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.TimeLog.DateAdded)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.TimeLog.DateModified)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.TimeLog.DateModified)
                </dd>


                <hr />


                <div asp-validation-summary="ModelOnly" class="text-danger"></div>



                @*
        09/16/2019 03:41 am - SSN - Remove "Please select..." from JobId and DisciplineId
                *@

                <div class="form-group">
                    <label asp-for="TimeLog.JobId" class="control-label"></label>

                    @*
            ng-model-options="{ updateOn: '*' , getterSetter: true}"  updateOn: 'change keyup' ,debounce: { 'default': 500, 'change': 500 },    ng-model-options="{  getterSetter: true}"
                    *@
                    @*ng-model="user.name"*@
                    <input name="TimeLog.JobId" value="@Model.TimeLog.JobId" />

                    @*// 01/05/2021 09:36 pm - SSN - [20210105-2136] - [001] - DropdownListDirective-test-ng-model*@

                    <dropdown-list-directive key="TimeLog.JobId" form-name="timesheetForm" name="user_jobid" ng-model="user.jobid" ng-model-temp="user.jobid"></dropdown-list-directive>
                </div>

                <div>user.name = <span ng-bind="user.name"></span></div>
                <div>user.jobid = <span ng-bind="user.jobid"></span></div>
                <div>user.LineItemID = <span ng-bind="user.LineItemID"></span></div>
                <div>user.DisciplineID = <span ng-bind="user.DisciplineID"></span></div>
                

                @*
        12/10/2020 04:25 pm - SSN - [20201210-1625] - [001] - Update Timelog edit MVC
                *@

                <div class="form-group">
                    <label asp-for="TimeLog.LineItemID" class="control-label"></label>
                    <input asp-for="TimeLog.LineItemID" type="hidden" />

                    <dropdown-list-directive key="TimeLog.LineItemID" ng-model="user.LineItemID" name="user_LineItemID" ng-model-temp="user.LineItemID" parentkey="user.jobid" parent-key-name="TimeLog.JobId" form-name="timesheetForm"></dropdown-list-directive>
                </div>



                @*
        09/16/2019 03:44 am - SSN - Replaced disciplineID wiht dropdown-list-directive and hidden field
                *@

                <div class="form-group">
                    <label asp-for="TimeLog.DisciplineID" class="control-label"></label>
                    <input asp-for="TimeLog.DisciplineID" type="hidden" />
                    <dropdown-list-directive key="TimeLog.DisciplineID" form-name="timesheetForm" name="user_DisciplineID" ng-model="user.DisciplineID"></dropdown-list-directive>
                </div>




                <div class="form-group">
                    <label asp-for="TimeLog.StartTime" class="control-label"></label>

                    &nbsp; <a cmd-name="set-default-time" jQueryObjectName="#TimeLog_StartTime">Now</a>

                    <input asp-for="TimeLog.StartTime" class="form-control" />

                    <span asp-validation-for="TimeLog.StartTime" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="TimeLog.TotalSeconds" class="control-label"></label>

                    @*// 04/19/2019 04:48 pm - SSN - [20190419-1647] - Set amount for TotalSeconds*@
                    &nbsp; <a cmd-name="set-TotalPeriod" jQueryObjectName="#TimeLog_StartTime" jQueryObjectName2="#TimeLog_TotalSeconds">Now</a>

                    <input asp-for="TimeLog.TotalSeconds" class="form-control" />

                    <span asp-validation-for="TimeLog.TotalSeconds" class="text-danger"></span>
                </div>


                <div class="form-group">
                    <label asp-for="TimeLog.WorkDetail" class="control-label"></label>

                    @*// 04/19/2019 04:44 pm - SSN - Replace Input with textarea*@
                    <textarea cols="40" rows="5" asp-for="TimeLog.WorkDetail" class="form-control">

</textarea>

                    <span asp-validation-for="TimeLog.WorkDetail" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" ng-click="submitForm_2($event,timesheetForm)" />
                </div>
            </form>
        </div>
    </div>

</div>

<div>
    @*<a asp-page="./Index">Back to List</a>*@
    @await Html.PartialAsync("ReturnToCallerLink", Model.returnToCaller)
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("TimesheetAngularScripts");}




    <script>
        // https://docs.angularjs.org/api/ng/directive/ngModel

        let tempJobId = parseInt( "@Model.TimeLog.JobId");

        angular.module('timesheetApp')
            .controller('ExampleControllerTemp', ['$scope', function ($scope) {
                var _name = 'Brian';
                $scope.user = {
                    //name: function (newName) {

                    //    console.log('setting name[', newName, ']'); 

                    //    // Note that newName can be undefined for two reasons:
                    //    // 1. Because it is called as a getter and thus called with no arguments
                    //    // 2. Because the property should actually be set to undefined. This happens e.g. if the
                    //    //    input is invalid
                    //    return arguments.length ? (_name = newName) : _name;
                    //}
                    name: _name
                    ,
                    jobid: tempJobId,
                    LineItemID: parseInt("@Model.TimeLog.LineItemID"),
                    DisciplineID: 111
                };

              


                $scope.$watch('user.name', function (newValue,oldValue) {
                    console.log('XXXXXXXXXXXXXXXXX user watch fired')
                    console.log(newValue)
                    console.log (  oldValue)
                });

 
            }]);
         
    </script>
}
